@page "/hospital"

@using SmICSWebApp.Data
@using System.Collections.Generic;
@using SmICSCoreLib.AQL.Patient_Stay.Count;

@inject DataService dataService

<h3>Statistik (Prototyp)</h3>

<div class="card">
    <StatistikNav>
    </StatistikNav>

    <div class="card-body">
        <div>
            <div style="padding: 0px 0px 100px 0px;">

                @if (allPositivTest == null)
                {
                    @if (status == true)
                    {
                        <p><em>Daten werden geladen...</em></p>
                        <div class="spinner"></div> }
                    else
                    {
                        <p><em>Es stehen momentan leider keine Daten zu Verfügung!</em></p>
                        <p><em>Versuchen Sie bitte später diese Seite aufzurufen!</em></p>
                    }
                }
                else
                {
                    <div class="row">
                        <div class="col-6">
                            <div class="card flex-fill">
                                <div class="card-header" style="padding-top: 10px;">
                                    <h5 class="card-title">Fallzahlen im Krankenhaus</h5>

                                </div>
                                <div class="card-body">
                                    <div class="table-wrapper-scroll-y" style="padding-bottom: 20px;">
                                        <table class="table table-bordered table-hover mb-0">
                                            <thead style="background-color: #7FBDD2;">
                                                <tr>
                                                    <th scope="col">Aktuelle Fallzahlen</th>
                                                    <th scope="col">Fallzahl gesamt</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <th scope="row">Laborbestätigt</th>
                                                    <td>@allPositivPat.Count()</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Mitgebrachte Fälle</th>
                                                    <td>@anzahlFaelle</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Mögliche Nosokomiale Infektion</th>
                                                    <td> @allNoskumalPat.Count() </td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Wahrscheinliche Nosokomiale Infektion</th>
                                                    <td> @noskumalPatByContact.Count() </td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Anzahl positiver Tests</th>
                                                    <td>@allPositivTest.Count()</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Anzahl negativer Tests</th>
                                                    <td>@allNegativPat.Count()</td>
                                                </tr>

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-6">
                            <div>
                                <div class="card flex-fill">
                                    <div class="card-header">
                                        <h5 class="card-title">Aufenthalt im Krankenhaus</h5>
                                    </div>
                                    <div class="card-body">
                                        <table class="table table-bordered table-hover mb-0">
                                            <thead style="background-color: #7FBDD2;">
                                                <tr>
                                                    <th scope="col">Aktuelle Fallzahlen </th>
                                                    <th scope="col">Anzahl gesamt</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <th scope="row">Anzahl aufgenommener Patienten</th>
                                                    <td>@allPositivPat.Count()</td>
                                                </tr>
                                                <tr>
                                                    <th scope="row">Anzahl Patiententage</th>
                                                    <td>@anzahlPatTage</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                }

            </div>
        </div>
    </div>
</div>

@code {
    private List<CountDataModel> allPositivTest;
    private List<CountDataModel> allNegativPat;
    private List<CountDataModel> allPositivPat;
    private List<Patient> allNoskumalPat;
    private List<Patient> noskumalPatByContact;
    private int anzahlFaelle;
    private int anzahlPatTage;
    private bool status;

    protected override async Task OnInitializedAsync()
    {
        status = true;
        await Task.Run(LoadEhrData);
    }

    private void LoadEhrData()
    {
        try
        {
            allPositivTest = dataService.GetAllPositivTest();
            allPositivPat = dataService.GetPositivPat(allPositivTest);
            allNegativPat = dataService.GetNegativPat();
            allNoskumalPat = dataService.GetAllNoskumalPat(allPositivTest);
            noskumalPatByContact = dataService.GetNoskumalByContact(allNoskumalPat, allPositivPat);
            anzahlFaelle = allPositivPat.Count() - allNoskumalPat.Count();
            anzahlPatTage = dataService.PatStay(allPositivPat);
            status = true;
        }
        catch (Exception)
        {
            status = false;
        }

    }



}